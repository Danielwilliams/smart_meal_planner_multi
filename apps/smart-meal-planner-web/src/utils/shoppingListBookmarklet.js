// Shopping list fix bookmarklet
// Create a bookmarklet with this code:
// javascript:(function(){var script=document.createElement('script');script.src='https://cdn.jsdelivr.net/gh/yourusername/repo/shoppingListFix.js';document.head.appendChild(script);})();

// Or minified version for direct bookmarklet:
// javascript:(function(){function e(){console.log("Enhancing shopping list display via DOM manipulation");const e=document.querySelectorAll(".MuiGrid-item .MuiTypography-root");console.log(`Found ${e.length} shopping list items`),e.forEach((e,t)=>{const o=e.textContent||"";console.log(`Item ${t}: "${o}"`);if(e.dataset.processed)return;let n=o;const i=/^([\d\.\/]+\s*(?:ozs?|pieces?|cups?|tbsps?|tsps?|cloves?|pinch|can|inch|lb|lbs|g|kg))\s+(.+)$/i,s=o.match(i);if(s){const e=s[1],t=s[2],i=t.split(" ").map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(" ");n=`${i}: ${e}`,console.log(`Fixed embedded quantity: "${o}" -> "${n}"`)}const a=/^(.+):\s*([\d\.\/]+)\s*$/,c=o.match(a);if(c&&!s){const e=c[1],t=c[2];e.toLowerCase().includes("chicken")||e.toLowerCase().includes("beef")||e.toLowerCase().includes("turkey")||e.toLowerCase().includes("steak")?n=`${e}: ${t} oz`:e.toLowerCase().includes("egg")?n=`${e}: ${t} large`:e.toLowerCase().includes("garlic")&&(n=`${e}: ${t} cloves`),console.log(`Added missing unit: "${o}" -> "${n}"`)}n!==o&&(e.textContent=n,e.style.fontWeight="bold",e.dataset.processed="true")}),console.log("Shopping list display enhancement complete")}console.log("Applying ShoppingList direct fix...");let t=null,o=0;function n(){let i=document.querySelectorAll("[data-reactroot]");0===i.length&&(i=document.querySelectorAll("#root")),o++,console.log(`Search attempt ${o} for ShoppingList component...`);if(0===i.length||o>10)return void console.error("Could not find React root element");const s=[];if(window.__REACT_DEVTOOLS_GLOBAL_HOOK__){const e=window.__REACT_DEVTOOLS_GLOBAL_HOOK__.getFiberRoots?Array.from(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.getFiberRoots()):null;e&&e.length>0&&(console.log("Found React fiber nodes via DevTools",e.length),e.forEach(e=>{const t=e.current;console.log("Processing fiber root",t);!function e(t){if(t&&(t.type&&"ShoppingList"===t.type.name&&(console.log("Found ShoppingList component!",t),s.push(t)),t.child&&e(t.child),t.sibling))e(t.sibling)}(t)}))}s.length>0?(console.log(`Found ${s.length} ShoppingList instances`),t=s[0],function(t){if(!t)return void console.error("No ShoppingList component found to fix");console.log("Injecting fixes into ShoppingList component");try{e()}catch(e){console.error("Error injecting fixes:",e)}}(t)):(console.log("No ShoppingList components found yet, will retry"),setTimeout(n,1e3))}function i(){const t=new MutationObserver(function(t){t.forEach(function(t){t.addedNodes&&t.addedNodes.length>0&&setTimeout(e,100)})});t.observe(document.body,{childList:!0,subtree:!0}),console.log("Watching for DOM changes to update shopping list fixes")}n(),i(),setTimeout(function(){e()},2e3),setInterval(e,5e3),console.log("Shopping list fix script initialized")})();